import type User from '@/types/User'
import { HAS_PUBLIC_KEY, verifySignature } from '@/utils/rsa'
import Head from 'next/head'
import { useEffect, useState } from 'react'

export default function Home() {
  const [user, setUser] = useState<User>()
  const [isLoading, setIsLoading] = useState<boolean>(false)
  const [isRejected, setIsRejected] = useState<boolean>(false)

  async function adminDeleteAllAccounts() {
    console.log("deleting all accounts...")
    const res = await fetch('/api/admin-delete-all-accounts')
    if(res.status == 204) {
      alert('deleted all accounts!')
    } else {
      alert('unexpected response: ' + res.status)
    }
  }

  useEffect(() => {
    (async function () {
      setIsLoading(true)
      const res = await fetch('/api/user')
      const data = await res.json()
      /**
       * If you uncomment this line, simulating an attempt at
       * tampering with the data, the request will be rejected.
       */
      // data.content.name = 'John Dough'

      /**
       * This HAS_PUBLIC_KEY constant is being used just to prevent
       * the code breaking in environments where the key is not set yet.
       * You can remove the first half of the OR statement if you want to enforce
       * environments to have the key set in order to even work.
       */
      const signatureVerified = !HAS_PUBLIC_KEY || await verifySignature(data.content, data.signature)
      setIsLoading(false)
      if (!signatureVerified) {
        setIsRejected(true)
        return
      }
      setUser(data.content)
    })()
  }, [])

  return (
    <>
      <Head>
        <title>RSA - Example</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
        Response:
        {isLoading ? (
          <div>Loading...</div>
        ) : (
          <div>{user?.name}</div>
        )}
        {isRejected && 'THE REQUEST WAS REJECTED'}
        </div>
        <hr/>
        <div>
        {user?.isAdmin ? (
          <button onClick={adminDeleteAllAccounts}>admin functionality</button>
        ) : (
            /* not admin */
            <span></span>
        )}

        </div>

      </main>
    </>
  )
}
